template<class T>  
void Print(T* arr, size_t n)  
{  
    for (int i = 0; i < n; i++)  
    {  
        cout << arr[i] << " ";  
    }  
    cout << endl;  
}  
  
template<class T>  
int PartSort(T* arr, int left, int right)  
{  
    int key = arr[right];  
    while (left < right)  
    {  
        while (left < right && arr[left] <= key)  
        {  
            ++left;  
        }  
        swap(arr[left], arr[right]);  
        while (left < right && arr[right] > key)  
        {  
            --right;  
        }  
        if (arr[left] != arr[right])  
        {  
            swap(arr[left], arr[right]);  
        }  
    }  
    arr[left] = key;  
    return left;  
}  
  
void QuickSort(int* arr, int left, int right)  
{  
    assert(arr);  
    if (left < right)  
    {  
        int div = PartSort(arr, left, right);  
        QuickSort(arr, left, div - 1);  
        QuickSort(arr, div + 1, right);  
    }  
}  
  
void TestQuickSort()  
{  
    int arr[10] = { 2, 0, 4, 9, 3, 6, 8, 7, 1, 5 };  
    QuickSort(arr, 0, sizeof(arr) / sizeof(arr[0]) - 1);  
    Print<int>(arr, sizeof(arr) / sizeof(arr[0]));  
}